{"ast":null,"code":"var _jsxFileName = \"E:\\\\Thyrve\\\\workflow-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, useNodesState, useEdgesState } from 'reactflow';\nimport { message } from 'antd';\nimport { nodeTypes } from './components/Nodes';\nimport Toolbar from './components/Toolbar';\nimport ConfigPanel from './components/ConfigPanel';\nimport WorkflowControls from './components/WorkflowControls';\nimport { executeWorkflow } from './services/api';\nimport 'reactflow/dist/style.css';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // 处理节点删除\n  const onNodesDelete = useCallback(nodesToDelete => {\n    // 可以在这里添加删除前的确认逻辑\n    message.success('节点已删除');\n  }, []);\n\n  // 处理连线删除\n  const onEdgesDelete = useCallback(edgesToDelete => {\n    message.success('连线已删除');\n  }, []);\n  const onConnect = useCallback(params => {\n    setEdges(eds => addEdge(params, eds));\n  }, [setEdges]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (!type) return;\n    const position = {\n      x: event.clientX - 200,\n      y: event.clientY - 40\n    };\n    const newNode = {\n      id: `${type}-${Date.now()}`,\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [setNodes]);\n  const onNodeClick = useCallback((_, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  // 添加键盘删除功能\n  const onKeyDown = useCallback(event => {\n    if (event.key === 'Delete' || event.key === 'Backspace') {\n      const selectedNodes = nodes.filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      if (selectedNodes.length > 0 || selectedEdges.length > 0) {\n        setNodes(nodes.filter(node => !node.selected));\n        setEdges(edges.filter(edge => !edge.selected));\n        message.info('已删除选中的项目');\n      }\n    }\n  }, [nodes, edges, setNodes, setEdges]);\n  const handleStart = async () => {\n    try {\n      console.log('开始执行工作流');\n      console.log('节点配置:', nodes);\n      console.log('连线:', edges);\n      const workflow = {\n        nodes,\n        edges\n      };\n      const result = await executeWorkflow(workflow);\n      console.log('执行结果:', result);\n      message.success('工作流执行成功');\n    } catch (error) {\n      console.error('执行错误:', error);\n      message.error('工作流执行失败: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    tabIndex: 0,\n    onKeyDown: onKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-area\",\n      children: [/*#__PURE__*/_jsxDEV(WorkflowControls, {\n        onStart: handleStart,\n        onSave: () => {},\n        onLoad: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onConnect: onConnect,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onNodeClick: onNodeClick,\n        nodeTypes: nodeTypes,\n        deleteKeyCode: ['Delete', 'Backspace'] // 支持Delete和Backspace键删除\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfigPanel, {\n      selectedNode: selectedNode,\n      onConfigChange: config => {\n        setNodes(nds => nds.map(node => {\n          if (node.id === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) {\n            node.data = {\n              ...node.data,\n              ...config\n            };\n          }\n          return node;\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KE7MDgZKvYpFOzINTTquzHP0Fcg=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","addEdge","Background","Controls","useNodesState","useEdgesState","message","nodeTypes","Toolbar","ConfigPanel","WorkflowControls","executeWorkflow","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","onNodesDelete","nodesToDelete","success","onEdgesDelete","edgesToDelete","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","type","getData","position","x","clientX","y","clientY","newNode","id","Date","now","data","label","nds","concat","onNodeClick","_","node","onKeyDown","key","selectedNodes","filter","selected","selectedEdges","edge","length","info","handleStart","console","log","workflow","result","error","className","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onSave","onLoad","deleteKeyCode","onConfigChange","config","map","_c","$RefreshReg$"],"sources":["E:/Thyrve/workflow-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, { \r\n  addEdge, \r\n  Background, \r\n  Controls,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from 'reactflow';\r\nimport { message } from 'antd';\r\nimport { nodeTypes } from './components/Nodes';\r\nimport Toolbar from './components/Toolbar';\r\nimport ConfigPanel from './components/ConfigPanel';\r\nimport WorkflowControls from './components/WorkflowControls';\r\nimport { executeWorkflow } from './services/api';\r\nimport 'reactflow/dist/style.css';\r\nimport './styles/index.css';\r\n\r\nconst App = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n  // 处理节点删除\r\n  const onNodesDelete = useCallback((nodesToDelete) => {\r\n    // 可以在这里添加删除前的确认逻辑\r\n    message.success('节点已删除');\r\n  }, []);\r\n\r\n  // 处理连线删除\r\n  const onEdgesDelete = useCallback((edgesToDelete) => {\r\n    message.success('连线已删除');\r\n  }, []);\r\n\r\n  const onConnect = useCallback((params) => {\r\n    setEdges((eds) => addEdge(params, eds));\r\n  }, [setEdges]);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n      if (!type) return;\r\n\r\n      const position = {\r\n        x: event.clientX - 200,\r\n        y: event.clientY - 40,\r\n      };\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  const onNodeClick = useCallback((_, node) => {\r\n    setSelectedNode(node);\r\n  }, []);\r\n\r\n  // 添加键盘删除功能\r\n  const onKeyDown = useCallback((event) => {\r\n    if (event.key === 'Delete' || event.key === 'Backspace') {\r\n      const selectedNodes = nodes.filter(node => node.selected);\r\n      const selectedEdges = edges.filter(edge => edge.selected);\r\n\r\n      if (selectedNodes.length > 0 || selectedEdges.length > 0) {\r\n        setNodes(nodes.filter(node => !node.selected));\r\n        setEdges(edges.filter(edge => !edge.selected));\r\n        message.info('已删除选中的项目');\r\n      }\r\n    }\r\n  }, [nodes, edges, setNodes, setEdges]);\r\n\r\n  const handleStart = async () => {\r\n    try {\r\n      console.log('开始执行工作流');\r\n      console.log('节点配置:', nodes);\r\n      console.log('连线:', edges);\r\n      \r\n      const workflow = { nodes, edges };\r\n      const result = await executeWorkflow(workflow);\r\n      \r\n      console.log('执行结果:', result);\r\n      message.success('工作流执行成功');\r\n    } catch (error) {\r\n      console.error('执行错误:', error);\r\n      message.error('工作流执行失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"app-container\" \r\n      tabIndex={0} \r\n      onKeyDown={onKeyDown}\r\n    >\r\n      <Toolbar />\r\n      <div className=\"workflow-area\">\r\n        <WorkflowControls\r\n          onStart={handleStart}\r\n          onSave={() => {}}\r\n          onLoad={() => {}}\r\n        />\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onNodesDelete={onNodesDelete}\r\n          onEdgesDelete={onEdgesDelete}\r\n          onConnect={onConnect}\r\n          onDrop={onDrop}\r\n          onDragOver={onDragOver}\r\n          onNodeClick={onNodeClick}\r\n          nodeTypes={nodeTypes}\r\n          deleteKeyCode={['Delete', 'Backspace']} // 支持Delete和Backspace键删除\r\n        >\r\n          <Background />\r\n          <Controls />\r\n        </ReactFlow>\r\n      </div>\r\n      <ConfigPanel\r\n        selectedNode={selectedNode}\r\n        onConfigChange={(config) => {\r\n          setNodes((nds) =>\r\n            nds.map((node) => {\r\n              if (node.id === selectedNode?.id) {\r\n                node.data = { ...node.data, ...config };\r\n              }\r\n              return node;\r\n            })\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}