{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\Thryve\\\\Demos\\\\Demo2byYWT\\\\Thyrve\\\\workflow-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, useNodesState, useEdgesState } from 'reactflow';\nimport { message } from 'antd';\nimport { nodeTypes } from './components/Nodes';\nimport Toolbar from './components/Toolbar';\nimport ConfigPanel from './components/ConfigPanel';\nimport WorkflowControls from './components/WorkflowControls';\nimport { executeWorkflow } from './services/api';\nimport 'reactflow/dist/style.css';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // 保存流程\n  const handleSave = useCallback(() => {\n    try {\n      const workflow = {\n        nodes,\n        edges,\n        version: '1.0',\n        // 版本号，方便未来扩展\n        savedAt: new Date().toISOString()\n      };\n\n      // 创建Blob并下载\n      const blob = new Blob([JSON.stringify(workflow, null, 2)], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `workflow-${new Date().getTime()}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      message.success('工作流程已保存');\n    } catch (error) {\n      console.error('保存失败:', error);\n      message.error('保存失败: ' + error.message);\n    }\n  }, [nodes, edges]);\n\n  // 加载流程\n  const handleLoad = useCallback(file => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const workflow = JSON.parse(e.target.result);\n\n        // 验证文件格式\n        if (!workflow.nodes || !workflow.edges) {\n          throw new Error('无效的工作流程文件');\n        }\n\n        // 加载节点和连线\n        setNodes(workflow.nodes);\n        setEdges(workflow.edges);\n        message.success('工作流程已加载');\n      } catch (error) {\n        console.error('加载失败:', error);\n        message.error('加载失败: ' + error.message);\n      }\n    };\n    reader.readAsText(file);\n  }, [setNodes, setEdges]);\n\n  // 处理节点删除\n  const onNodesDelete = useCallback(nodesToDelete => {\n    // 可以在这里添加删除前的确认逻辑\n    message.success('节点已删除');\n  }, []);\n\n  // 处理连线删除\n  const onEdgesDelete = useCallback(edgesToDelete => {\n    message.success('连线已删除');\n  }, []);\n  const onConnect = useCallback(params => {\n    setEdges(eds => addEdge(params, eds));\n  }, [setEdges]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (!type) return;\n    const position = {\n      x: event.clientX - 200,\n      y: event.clientY - 40\n    };\n    const newNode = {\n      id: `${type}-${Date.now()}`,\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [setNodes]);\n  const onNodeClick = useCallback((_, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  // 添加键盘删除功能\n  const onKeyDown = useCallback(event => {\n    if (event.key === 'Delete' || event.key === 'Backspace') {\n      const selectedNodes = nodes.filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      if (selectedNodes.length > 0 || selectedEdges.length > 0) {\n        setNodes(nodes.filter(node => !node.selected));\n        setEdges(edges.filter(edge => !edge.selected));\n        message.info('已删除选中的项目');\n      }\n    }\n  }, [nodes, edges, setNodes, setEdges]);\n  const handleStart = async () => {\n    try {\n      console.log('开始执行工作流');\n      console.log('节点配置:', nodes);\n      console.log('连线配置:', edges);\n      const workflow = {\n        nodes,\n        edges\n      };\n      const result = await executeWorkflow(workflow);\n      console.log('执行结果:', result);\n      if (result.status === 'success') {\n        message.success('工作流执行成功，请查看生成的文档');\n      } else {\n        console.warn('执行完成但可能有警告:', result);\n        message.warning('工作流执行完成，但可能有警告');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('执行错误:', error);\n      console.error('错误详情:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      message.error(`执行失败: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    tabIndex: 0,\n    onKeyDown: onKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-area\",\n      children: [/*#__PURE__*/_jsxDEV(WorkflowControls, {\n        onStart: handleStart,\n        onSave: handleSave,\n        onLoad: handleLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onConnect: onConnect,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onNodeClick: onNodeClick,\n        nodeTypes: nodeTypes,\n        deleteKeyCode: ['Delete', 'Backspace'] // 支持Delete和Backspace键删除\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfigPanel, {\n      selectedNode: selectedNode,\n      onConfigChange: config => {\n        setNodes(nds => nds.map(node => {\n          if (node.id === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) {\n            node.data = {\n              ...node.data,\n              ...config\n            };\n          }\n          return node;\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gCHmbixx26qCl72Qzt3yPkcmD7o=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","addEdge","Background","Controls","useNodesState","useEdgesState","message","nodeTypes","Toolbar","ConfigPanel","WorkflowControls","executeWorkflow","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","handleSave","workflow","version","savedAt","Date","toISOString","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","link","document","createElement","href","download","getTime","body","appendChild","click","removeChild","revokeObjectURL","success","error","console","handleLoad","file","reader","FileReader","onload","e","parse","target","result","Error","readAsText","onNodesDelete","nodesToDelete","onEdgesDelete","edgesToDelete","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","getData","position","x","clientX","y","clientY","newNode","id","now","data","label","nds","concat","onNodeClick","_","node","onKeyDown","key","selectedNodes","filter","selected","selectedEdges","edge","length","info","handleStart","log","status","warn","warning","_error$response","response","className","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onSave","onLoad","deleteKeyCode","onConfigChange","config","map","_c","$RefreshReg$"],"sources":["D:/Repositories/Thryve/Demos/Demo2byYWT/Thyrve/workflow-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, { \r\n  addEdge, \r\n  Background, \r\n  Controls,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from 'reactflow';\r\nimport { message } from 'antd';\r\nimport { nodeTypes } from './components/Nodes';\r\nimport Toolbar from './components/Toolbar';\r\nimport ConfigPanel from './components/ConfigPanel';\r\nimport WorkflowControls from './components/WorkflowControls';\r\nimport { executeWorkflow } from './services/api';\r\nimport 'reactflow/dist/style.css';\r\nimport './styles/index.css';\r\n\r\nconst App = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n\r\n  // 保存流程\r\n  const handleSave = useCallback(() => {\r\n    try {\r\n      const workflow = {\r\n        nodes,\r\n        edges,\r\n        version: '1.0', // 版本号，方便未来扩展\r\n        savedAt: new Date().toISOString()\r\n      };\r\n\r\n      // 创建Blob并下载\r\n      const blob = new Blob([JSON.stringify(workflow, null, 2)], { type: 'application/json' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `workflow-${new Date().getTime()}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      message.success('工作流程已保存');\r\n    } catch (error) {\r\n      console.error('保存失败:', error);\r\n      message.error('保存失败: ' + error.message);\r\n    }\r\n  }, [nodes, edges]);\r\n\r\n  // 加载流程\r\n  const handleLoad = useCallback((file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const workflow = JSON.parse(e.target.result);\r\n        \r\n        // 验证文件格式\r\n        if (!workflow.nodes || !workflow.edges) {\r\n          throw new Error('无效的工作流程文件');\r\n        }\r\n\r\n        // 加载节点和连线\r\n        setNodes(workflow.nodes);\r\n        setEdges(workflow.edges);\r\n        message.success('工作流程已加载');\r\n      } catch (error) {\r\n        console.error('加载失败:', error);\r\n        message.error('加载失败: ' + error.message);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  }, [setNodes, setEdges]);\r\n\r\n\r\n  // 处理节点删除\r\n  const onNodesDelete = useCallback((nodesToDelete) => {\r\n    // 可以在这里添加删除前的确认逻辑\r\n    message.success('节点已删除');\r\n  }, []);\r\n\r\n  // 处理连线删除\r\n  const onEdgesDelete = useCallback((edgesToDelete) => {\r\n    message.success('连线已删除');\r\n  }, []);\r\n\r\n  const onConnect = useCallback((params) => {\r\n    setEdges((eds) => addEdge(params, eds));\r\n  }, [setEdges]);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n      if (!type) return;\r\n\r\n      const position = {\r\n        x: event.clientX - 200,\r\n        y: event.clientY - 40,\r\n      };\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [setNodes]\r\n  );\r\n\r\n  const onNodeClick = useCallback((_, node) => {\r\n    setSelectedNode(node);\r\n  }, []);\r\n\r\n  // 添加键盘删除功能\r\n  const onKeyDown = useCallback((event) => {\r\n    if (event.key === 'Delete' || event.key === 'Backspace') {\r\n      const selectedNodes = nodes.filter(node => node.selected);\r\n      const selectedEdges = edges.filter(edge => edge.selected);\r\n\r\n      if (selectedNodes.length > 0 || selectedEdges.length > 0) {\r\n        setNodes(nodes.filter(node => !node.selected));\r\n        setEdges(edges.filter(edge => !edge.selected));\r\n        message.info('已删除选中的项目');\r\n      }\r\n    }\r\n  }, [nodes, edges, setNodes, setEdges]);\r\n\r\n  const handleStart = async () => {\r\n    try {\r\n        console.log('开始执行工作流');\r\n        console.log('节点配置:', nodes);\r\n        console.log('连线配置:', edges);\r\n        \r\n        const workflow = { nodes, edges };\r\n        const result = await executeWorkflow(workflow);\r\n        \r\n        console.log('执行结果:', result);\r\n        if (result.status === 'success') {\r\n            message.success('工作流执行成功，请查看生成的文档');\r\n        } else {\r\n            console.warn('执行完成但可能有警告:', result);\r\n            message.warning('工作流执行完成，但可能有警告');\r\n        }\r\n    } catch (error) {\r\n        console.error('执行错误:', error);\r\n        console.error('错误详情:', error.response?.data);\r\n        message.error(`执行失败: ${error.message}`);\r\n    }\r\n};\r\n\r\n  return (\r\n    <div \r\n      className=\"app-container\" \r\n      tabIndex={0} \r\n      onKeyDown={onKeyDown}\r\n    >\r\n      <Toolbar />\r\n      <div className=\"workflow-area\">\r\n        <WorkflowControls\r\n          onStart={handleStart}\r\n          onSave={handleSave}\r\n          onLoad={handleLoad}\r\n        />\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onNodesDelete={onNodesDelete}\r\n          onEdgesDelete={onEdgesDelete}\r\n          onConnect={onConnect}\r\n          onDrop={onDrop}\r\n          onDragOver={onDragOver}\r\n          onNodeClick={onNodeClick}\r\n          nodeTypes={nodeTypes}\r\n          deleteKeyCode={['Delete', 'Backspace']} // 支持Delete和Backspace键删除\r\n        >\r\n          <Background />\r\n          <Controls />\r\n        </ReactFlow>\r\n      </div>\r\n      <ConfigPanel\r\n        selectedNode={selectedNode}\r\n        onConfigChange={(config) => {\r\n          setNodes((nds) =>\r\n            nds.map((node) => {\r\n              if (node.id === selectedNode?.id) {\r\n                node.data = { ...node.data, ...config };\r\n              }\r\n              return node;\r\n            })\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}