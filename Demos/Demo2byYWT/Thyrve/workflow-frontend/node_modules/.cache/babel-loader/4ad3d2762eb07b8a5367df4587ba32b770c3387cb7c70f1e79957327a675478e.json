{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\Thryve\\\\Demos\\\\Demo2byYWT\\\\Thyrve\\\\workflow-frontend\\\\src\\\\components\\\\ConfigPanel.jsx\";\nimport React from 'react';\nimport { Form, Input, Select, Button } from 'antd';\nimport { nodeConfigs } from './Nodes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigPanel = ({\n  selectedNode,\n  onConfigChange\n}) => {\n  if (!selectedNode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-panel\",\n      children: \"\\u8BF7\\u9009\\u62E9\\u8282\\u70B9\\u8FDB\\u884C\\u914D\\u7F6E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  const nodeConfig = nodeConfigs[selectedNode.type];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"config-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u8282\\u70B9\\u914D\\u7F6E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      initialValues: selectedNode.data,\n      onValuesChange: (_, allValues) => onConfigChange(allValues),\n      children: nodeConfig.configs.map(config => /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: config.label,\n        name: config.key,\n        children: [config.type === 'input' && /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }, this), config.type === 'select' && /*#__PURE__*/_jsxDEV(Select, {\n          options: config.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), config.type === 'textarea' && /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 44\n        }, this)]\n      }, config.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ConfigPanel;\nexport default ConfigPanel;\nvar _c;\n$RefreshReg$(_c, \"ConfigPanel\");","map":{"version":3,"names":["React","Form","Input","Select","Button","nodeConfigs","jsxDEV","_jsxDEV","ConfigPanel","selectedNode","onConfigChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","nodeConfig","type","layout","initialValues","data","onValuesChange","_","allValues","configs","map","config","Item","label","name","key","options","TextArea","_c","$RefreshReg$"],"sources":["D:/Repositories/Thryve/Demos/Demo2byYWT/Thyrve/workflow-frontend/src/components/ConfigPanel.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nimport { nodeConfigs } from './Nodes';\r\n\r\nconst ConfigPanel = ({ selectedNode, onConfigChange }) => {\r\n  if (!selectedNode) {\r\n    return <div className=\"config-panel\">请选择节点进行配置</div>;\r\n  }\r\n\r\n  const nodeConfig = nodeConfigs[selectedNode.type];\r\n\r\n  return (\r\n    <div className=\"config-panel\">\r\n      <h3>节点配置</h3>\r\n      <Form\r\n        layout=\"vertical\"\r\n        initialValues={selectedNode.data}\r\n        onValuesChange={(_, allValues) => onConfigChange(allValues)}\r\n      >\r\n        {nodeConfig.configs.map((config) => (\r\n          <Form.Item key={config.key} label={config.label} name={config.key}>\r\n            {config.type === 'input' && <Input />}\r\n            {config.type === 'select' && (\r\n              <Select options={config.options} />\r\n            )}\r\n            {config.type === 'textarea' && <Input.TextArea />}\r\n          </Form.Item>\r\n        ))}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,MAAM;AAClD,SAASC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EACxD,IAAI,CAACD,YAAY,EAAE;IACjB,oBAAOF,OAAA;MAAKI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtD;EAEA,MAAMC,UAAU,GAAGZ,WAAW,CAACI,YAAY,CAACS,IAAI,CAAC;EAEjD,oBACEX,OAAA;IAAKI,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BL,OAAA;MAAAK,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbT,OAAA,CAACN,IAAI;MACHkB,MAAM,EAAC,UAAU;MACjBC,aAAa,EAAEX,YAAY,CAACY,IAAK;MACjCC,cAAc,EAAEA,CAACC,CAAC,EAAEC,SAAS,KAAKd,cAAc,CAACc,SAAS,CAAE;MAAAZ,QAAA,EAE3DK,UAAU,CAACQ,OAAO,CAACC,GAAG,CAAEC,MAAM,iBAC7BpB,OAAA,CAACN,IAAI,CAAC2B,IAAI;QAAkBC,KAAK,EAAEF,MAAM,CAACE,KAAM;QAACC,IAAI,EAAEH,MAAM,CAACI,GAAI;QAAAnB,QAAA,GAC/De,MAAM,CAACT,IAAI,KAAK,OAAO,iBAAIX,OAAA,CAACL,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACpCW,MAAM,CAACT,IAAI,KAAK,QAAQ,iBACvBX,OAAA,CAACJ,MAAM;UAAC6B,OAAO,EAAEL,MAAM,CAACK;QAAQ;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACnC,EACAW,MAAM,CAACT,IAAI,KAAK,UAAU,iBAAIX,OAAA,CAACL,KAAK,CAAC+B,QAAQ;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GALnCW,MAAM,CAACI,GAAG;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACkB,EAAA,GA3BI1B,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}